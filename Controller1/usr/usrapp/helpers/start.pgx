<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="start">
    <Locals>
      <Local name="l_nBin" type="num" xsi:type="array" size="3" />
      <Local name="l_nRes" type="num" xsi:type="array" size="1" />
      <Local name="l_nRows" type="num" xsi:type="array" size="1" />
      <Local name="l_nCols" type="num" xsi:type="array" size="1" />
      <Local name="l_nCounter" type="num" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  
  ? "## test num2Bool"
  ? "nTest[0] = nTest[1] = nTest[4] = 1"
  nTest[0] = nTest[1] = nTest[4] = 1
  
  call num2bool(nTest, bResult, bError)
  call printBool(bResult)
  
  ? "## test countBool"
  call countBool(bResult,nResult)
  call printNum(nResult)
  
  ? "## test allBool"
  call allBool(bResult, bResult2)
  call printBool(bResult2)
  
  ? "## test allBool"
  ? "nTest[2] = nTest[3] = 1"
  nTest[2] = nTest[3] = 1
  call num2bool(nTest, bResult, bError)
  call allBool(bResult, bResult2)
  call printBool(bResult2)
  
  ? "## test countBool"
  call countBool(bResult,nResult)
  call printNum(nResult)
  
  ? "## test anyBool TRUE"
  call anyBool(bResult, "TRUE",bResult2)
  call printBool(bResult2)
  
  ? "## test anyBool FALSE"
  call anyBool(bResult, "FALSE",bResult2)
  call printBool(bResult2)
  
  ? "## test bool2num"
  call bool2num(bResult, nResult, bError)
  call printNum(nResult)
  
  ? "## test bool2num"
  ? "nTest[0] = nTest[1] = nTest[4] = 0"
  nTest[0] = nTest[1] = nTest[4] = 0
  call num2bool(nTest, bResult, bError)
  call bool2num(bResult, nResult, bError)
  call printNum(nResult)
  
  ? "## test bin2dec"
  ? "nTest"
  l_nBin[0] = 1
  l_nBin[1] = 0
  l_nBin[2] = 0
  
  call bin2dec(l_nBin, l_nRes)
  call printNum(l_nRes)
  
  ? "## test mergeVectors"
  nTest2[0] = 5
  nTest2[1] = -3
  nTest2[2] = 10
  nTest2[4] = -1
  
  call mergeVectors(nTest, nTest2, nResult)
  call printNum(nResult)
  
  ? "## test colSum"
  for l_nRows = 0 to size(nMatrix,1)-1
    for l_nCols = 0 to size(nMatrix,2)-1
      nMatrix[l_nRows,l_nCols] = l_nCounter
      l_nCounter = l_nCounter +1
    endFor
  endFor
  
  // 0 1  2  3
  // 4 5  6  7
  // 8 9 10 11
  
  call colSum(nMatrix, nResult)
  call printNum(nResult)
  
  ? "## test rowSum"
  call rowSum(nMatrix, nResult)
  call printNum(nResult)
  
end  ]]></Code>
  </Program>
</Programs>